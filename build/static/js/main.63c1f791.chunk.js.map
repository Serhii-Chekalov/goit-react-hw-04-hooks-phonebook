{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","setState","currentTarget","target","value","handleSubmit","preventDefault","onSubmit","props","this","action","htmlFor","onChange","type","pattern","title","required","Component","List","ul","ListItem","li","ContactList","contacts","deleteId","map","contact","id","onClick","Wrapper","div","Filter","getFilteredName","PrimaryTitle","h1","SecondaryTitle","h2","App","filter","handleFilter","text","visibleContacts","normalizedFilter","toLowerCase","includes","addContact","newContact","uuidv4","some","alert","deleteContact","storageContacts","localStorage","getItem","storageContactsParced","JSON","parse","prevState","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63c1f791.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n  padding: 10px 200px 10px 10px;\r\n  border: 2px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 4px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","import { Component } from \"react\";\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.currentTarget.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onSubmit } = this.props;\r\n\r\n    onSubmit(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, handleChange } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form action=\"\" onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <Label htmlFor=\"number\">Number</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 3px 6px;\r\n  margin-left: 10px;\r\n  font-size: 12px;\r\n  background-color: #fff;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","import { List, ListItem, Button } from \"./ContactList.styled\";\r\n\r\nconst ContactList = ({ contacts, deleteId }) => {\r\n  return (\r\n    <div>\r\n      <List>\r\n        {contacts.map((contact) => {\r\n          const { id, name, number } = contact;\r\n          return (\r\n            <ListItem key={id}>\r\n              {name} - {number}{\" \"}\r\n              <Button type=\"button\" onClick={() => deleteId(id)}>\r\n                Delete\r\n              </Button>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;\r\n","import { Component } from \"react\";\r\nimport { Wrapper, Input, Label } from \"./Filter.styled\";\r\n\r\nclass Filter extends Component {\r\n  getFilteredName = (e) => {\r\n    const { onChange } = this.props;\r\n\r\n    return onChange(e.currentTarget.value);\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <Wrapper>\r\n        <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={this.getFilteredName}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\n  margin-left: 70px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 70px;\n`;\n","import { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactsList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const storageContacts = localStorage.getItem(\"contacts\");\n    const storageContactsParced = JSON.parse(storageContacts);\n    if (storageContactsParced) {\n      this.setState({ contacts: storageContactsParced });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contact !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleFilter = (text) => {\n    this.setState({ filter: text });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    )\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState({\n          contacts: [newContact, ...contacts],\n        });\n  };\n\n  deleteContact = (id) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  render() {\n    const { addContact, handleFilter, visibleContacts, state, deleteContact } =\n      this;\n    return (\n      <>\n        <PrimaryTitle>Phonebook</PrimaryTitle>\n        <ContactForm onSubmit={addContact} />\n\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        <Filter onChange={handleFilter} value={state.filter} />\n        <ContactList contacts={visibleContacts()} deleteId={deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}